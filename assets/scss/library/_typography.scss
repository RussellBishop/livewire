@function font-stack($family) {

  $return: null;

  @if ($family == 'franklin') {
    $return: 'Georgia', 'Franklin Gothic Medium', 'Franklin Gothic', 'ITC Franklin Gothic', Arial, sans-serif;

  }

  @return $return;
}

@mixin font-scale($smallestFont, $largestFont) {

  font-size: #{$smallestFont}px;

  @media (min-width: #{$breakpointSmallest}px) and (max-width: #{$breakpointLargest}px) {
    font-size: calc(#{$smallestFont}px + (#{$largestFont} - #{$smallestFont}) * ( (100vw - #{$breakpointSmallest}px) / ( #{$breakpointLargest} - #{$breakpointSmallest}) ));
  }

  @media (min-width: #{$breakpointLargest}px) {
    font-size: #{$largestFont}px;
  }

}

@function pow($number, $exponent) {
  $value: 1;

  @if $exponent > 0 {
    @for $i from 1 through $exponent {
      $value: $value * $number;
    }
  }

  @return $value;
}

$textSmallest: 16;
$textLargest: 36;

$lineHeight: 1.5;

$bodyTextSmallest: $textSmallest;
$bodyTextLargest: 18;

:root {
  @include font-scale($textSmallest, $bodyTextLargest);
  font-family: 'Roboto', sans-serif;
}

body {
  line-height: $lineHeight;
}

%heading {
  font-family: 'Slabo 27px', serif;
  letter-spacing: .02em;
}

$modular: 1.2;
$headingCount: 3;
$headingCountMax: $headingCount + 1;

@for $i from 1 through $headingCount {
  h#{$i},
  .h#{$i} {
    @extend %heading;
  }
}

@for $i from 1 through $headingCount {
  h#{$i} {
    font-size: #{pow($modular, $headingCountMax - $i)}em;
  }
}

h#{$headingCountMax} {
  font-weight: bold;
}

blockquote {
  font-style: italic;
}

.text {
  &-caps {
    text-transform: uppercase;
  }

  &-small {
    font-size: .9rem;
  }
}

a {
  color: colour(button);

  &:hover {
    color: darken(colour(button), 5%);
  }

  &:focus {
    color: darken(colour(button), 15%);
  }
}

hr {
  display: block;
  height: 2px;
  margin-top: 2rem !important;
  margin-bottom: 2rem !important;
  background: colour(hr);
  border: none;
}

.text-align {
  $directions: left, right, center;

  @each $direction in $directions {
    &-#{$direction} {
      text-align: #{$direction};
    }
  }

  &-centre {
    text-align: centre;
  }
}

.text-colour {
  &--white {
    color: colour(white);
  }
}
